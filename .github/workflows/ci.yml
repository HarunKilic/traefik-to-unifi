name: CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  code-quality:
    name: Code Quality & Linting
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: poetry-${{ runner.os }}-3.12-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            poetry-${{ runner.os }}-3.12-

      - name: Install dependencies
        run: poetry install --with dev --no-interaction --no-ansi

      - name: Run Ruff linting
        run: poetry run ruff check traefiktounifi/ --output-format=github

      - name: Check formatting with Ruff
        run: poetry run ruff format traefiktounifi/ --check --diff

      - name: Check formatting with Black
        run: poetry run black --check --diff traefiktounifi/

      - name: Run pre-commit hooks
        run: poetry run pre-commit run --all-files --show-diff-on-failure

  security:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: "trivy-results.sarif"
